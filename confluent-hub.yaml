#https://github.com/warpstreamlabs/charts/tree/main/charts/warpstream-agent
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: confluent
spec:
  dataVolumeCapacity: 10G
  replicas: 3
  image:
    application: docker.io/confluentinc/cp-server:8.1.0
    init: confluentinc/confluent-init-container:2.11.0
  build:
    type: onDemand
    onDemand:
      plugins:
        locationType: confluentHub
        confluentHub:
          - name: kafka-connect-mongodb
            owner: confluentinc
            version: 2.0.1
          - name: debezium-connector-postgresql
            owner: confluentinc
            version: 3.1.2
          - name: kafka-connect-jdbc
            owner: confluentinc
            version: 10.8.4
          #https://docs.confluent.io/kafka-connectors/jdbc/current/jdbc-drivers.html#postgresql-database
          #https://docs.confluent.io/kafka-connectors/debezium-mongodb-source/current/overview.html#start-the-debezium-mongodb-connector
          #https://docs.confluent.io/kafka-connectors/debezium-postgres-source/current/overview.html#start-the-debezium-postgresql-connector
          #https://support.confluent.io/hc/en-us/articles/22116302940564-How-to-bypass-JDBC-Sink-Connector-fails-to-sink-Array-Data-to-PostgreSQL
          #https://github.com/confluentinc/kafka-docker-playground/blob/master/connect/connect-jdbc-postgresql-sink/README.md
  dependencies:
    kafka:
      bootstrapEndpoint: <replace-with-warpstream-bootstrap>
      authentication:
        type: plain
        jaasConfig:
          secretRef: ccloud-credentials
      tls:
        enabled: true
        ignoreTrustStoreConfig: true 
    #Removing if SR will be self hosted, add in for WS SR
    #schemaRegistry:
      #url: <replace-with-warpstream-sr-url>
      #authentication:
        #type: basic
        #basic:
          #secretRef: ccloud-sr-credentials
---
# Example to connect self-manged Schema Registry to Warpstream
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: confluent
spec:
  replicas: 2
  image:
    application: confluentinc/cp-schema-registry:8.1.0
    init: confluentinc/confluent-init-container:3.1.0
  dependencies:
    kafka:
      bootstrapEndpoint: <warpstream_url>:9092
      authentication:
        type: plain
        jaasConfig:
          secretRef: cloud-plain
      tls:
        enabled: true
        ignoreTrustStoreConfig: true
---
#https://docs.confluent.io/operator/current/co-plan.html#default-ports-in-co-long
#https://docs.confluent.io/platform/current/flink/installation/overview.html
#https://github.com/confluentinc/confluent-demo/blob/main/assets/manifests/cmf/basic/CMFRestClass.yaml
#https://docs.confluent.io/operator/current/co-manage-flink.html
#https://confluent.slack.com/archives/C06H8AGRC4E/p1761326684094339?thread_ts=1761324461.422979&cid=C06H8AGRC4E
---
apiVersion: platform.confluent.io/v1beta1
kind: CMFRestClass
metadata:
  name: default
  namespace: confluent
spec:
  cmfRest:
    endpoint: http://cmf.confluent.svc.cluster.local
---
apiVersion: platform.confluent.io/v1beta1
kind: FlinkEnvironment
metadata:
  name: flink-env1
  namespace: confluent
spec:
  kubernetesNamespace: default
  flinkApplicationDefaults:
    spec:
      flinkConfiguration:
        taskmanager.numberOfTaskSlots: "10"
  cmfRestClassRef:
    name: default
    namespace: confluent
---
#https://docs.confluent.io/platform/current/flink/jobs/sql-statements/create-statements.html
#https://docs.confluent.io/platform/current/flink/jobs/sql-statements/use-interactive-shell.html
